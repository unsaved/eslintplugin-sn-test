/* N.b. this file is used by 'snLint'.
 * It would not be honored by 'eslint' directly unless you use the -c switch.
 * Override settings must specify source files with path format
 *  'TABLENAME/BASENAME.js' or 'TABLENAME/ALTSCOPE/BASENAME.js'.
 * Example: "sys_script/global/sane.js" */
{
  "root": true,
  "plugins": ["@admc.com/sn"],
  "extends": ["plugin:@admc.com/sn/servicenow"],

  // Following are overrides which escalate warns to errors.
  // Tests only work if the level is error because we check only snLint/eslint return value,
  // not the stdout or stderr.
  "rules": {
    "no-implied-eval": "error",
    "no-eval": "error",
    "no-array-constructor": "error",
    "max-depth": "error",
    "dot-notation": "error",
    "camelcase": ["error", { "properties": "never", "ignoreGlobals": true }],
    "no-template-curly-in-string": "error",
    "eqeqeq": "error",
    "semi": "error",
    "no-extra-parens": "error",
    "no-eq-null": "error",
    "@admc.com/sn/prefer-array-iterator": "error",
    "@admc.com/sn/no-init-emptystring": "error"
  },
  "overrides": [
    {  // ES6 overrides
      "files": [ "**/@(noniso|iso)/*.js",
                 "**/@(sys_ui_script|sys_script_validator|sp_widget.client_script|sys_ux_data_broker_scriptlet|sp_widget.link|sys_ui_context_menu)/all/*.js"],  // eslint-disable-line max-len
      "rules": {
        "strict": ["error", "function"],
        "prefer-arrow-callback": "error",
        "object-shorthand": "error",
        "no-useless-rename": "error",
        "no-var": "error",
        "prefer-template": "error",
        "prefer-rest-params": "error",
        "prefer-spread": "error",
        "@admc.com/sn/no-client-gr": "error"
      }
    }, {  // ES 12 overrides
      "files": [ "**/scoped-es12/*.js" ],
      "rules": {
        "strict": ["error", "global"],
        "prefer-arrow-callback": "error",
        "object-shorthand": "error",
        "no-useless-rename": "error",
        "no-var": "error",
        "prefer-rest-params": "error",
        "prefer-spread": "error",
        "prefer-template": "error"
      }
    }, {
        // Reverting eslint-plugin-sn exceptions back, because we overrode them generally above
        // when raising warnings to errors.
        "files":
          ["**/@(sys_ui_script|sp_widget.script|sp_widget.client_script|sp_widget.link|sp_widget.link|sys_ui_context_menu)/*/*.js"],
        "rules": {
            "prefer-template": "off",
            "no-template-curly-in-string": "off"
        }
    }, {  // Overriding for ES12 IIFE scriptlets}
      "files": [
        "**/@(sys_script|sys_ws_operation|sys_web_service|sys_processor|sys_script_email|sys_transform_map|sys_transform_script|sp_widget.script|sys_ui_page.processing_script)/scoped-es12/*.js",  // eslint-disable-line max-len
        "**/sys_ui_action/@(iso|noniso)_scoped-es12/*.js"
      ],
      "rules": { "strict": ["error", "function"] }
    }, { // Custom table and scope
      "files": [ "**/custom_table/custom_alt/*.js" ],
      "env": {"@admc.com/sn/sn_server_global": true },
      "rules": {
         "@admc.com/sn/invalid-table-alt": "off",
         "@admc.com/sn/log-global-2-args": "error",
         "@admc.com/sn/no-log-scoped": "error"
       }
    }, { // Condition scriptlets
      "files": [ "**/*.condition/*/*.js"],
      "rules": { "strict": "off", "semi": "off" }
    }, { // NE sys_ux scripts don't need and can't use "use strict"
      "files": [ "**/sys_ux_*/*/*.js"],
      "rules": { "strict": "off" }
    }
  ],
  "settings": {
    "customTables": {"custom_table": ["custom_alt"]}
  }
}
